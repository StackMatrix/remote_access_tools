window.SIDEBAR_ITEMS = {"derive":[["AsBytes",""],["FromBytes",""],["Unaligned",""]],"enum":[["BigEndian","Defines big-endian serialization."],["LittleEndian","Defines little-endian serialization."]],"fn":[["__real_transmute","Reinterprets the bits of a value of one type as another type."]],"macro":[["transmute","Safely transmutes a value of one type to a value of another type of the same size."]],"mod":[["byteorder","Byte order-aware numeric primitives."]],"struct":[["I128",""],["I16",""],["I32",""],["I64",""],["LayoutVerified","A length- and alignment-checked reference to a byte slice which can safely be reinterpreted as another type."],["U128",""],["U16",""],["U32",""],["U64",""],["Unalign","A type with no alignment requirement."]],"trait":[["AsBytes","Types which are safe to treat as an immutable byte slice."],["ByteOrder","`ByteOrder` describes types that can serialize integers as bytes."],["ByteSlice","A mutable or immutable reference to a byte slice."],["ByteSliceMut","A mutable reference to a byte slice."],["FromBytes","Types for which any byte pattern is valid."],["Unaligned","Types with no alignment requirement."]],"type":[["BE","A type alias for `BigEndian`."],["LE","A type alias for `LittleEndian`."],["NativeEndian","Defines system native-endian serialization."],["NetworkEndian","Defines network byte order serialization."]]};